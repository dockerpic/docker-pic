version: '2'


networks:
  prodnetwork:
    driver: bridge

services:
 nexus:
  hostname: nexus
  build: ./nexus
  ports:
    - "18081:8081"
  networks:
    - prodnetwork

 jenkins:
  hostname: jenkins
  build: ./jenkins
  ports:
    - "18080:8080"
    - "50000:50000"
  networks:
    - prodnetwork
  volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - /usr/bin/docker:/usr/bin/docker
    - /opt/jenkins:/var/jenkins_home
  depends_on:
    - nexus
    - sonar
    - jmeter
  environment:
    - NEXUS_PORT=8081
    - SONAR_PORT=9000
    - SONAR_DB_PORT=5432

 sonar:
  hostname: sonar
  build: ./sonar
  ports:
   - "19000:9000"
   - "5432:5432"
  networks:
    - prodnetwork
  depends_on:
    - postgresql
  volumes:
    - sonarqube_data:/bitnami
  environment:
   - POSTGRESQL_HOST=postgresql
   - POSTGRESQL_ROOT_USER=postgres
   - POSTGRESQL_CLIENT_CREATE_DATABASE_NAME=bitnami_sonarqube
   - POSTGRESQL_CLIENT_CREATE_DATABASE_USERNAME=bn_sonarqube
   - POSTGRESQL_CLIENT_CREATE_DATABASE_PASSWORD=bitnami1234
   - SONARQUBE_DATABASE_NAME=bitnami_sonarqube
   - SONARQUBE_DATABASE_USER=bn_sonarqube
   - SONARQUBE_DATABASE_PASSWORD=bitnami1234


 postgresql:
  hostname: postgresql
  networks:
    - prodnetwork
  image: bitnami/postgresql:10
  environment:
   - POSTGRES_USER=bn_sonarqube
   - POSTGRES_PASSWORD=bitnami1234
  volumes:
    - postgresql_data:/bitnami

 jmeter:
  hostname: jmeter
  networks:
    - prodnetwork
  build: ./jmeter
  volumes:
    - /opt/jmeter/results:/results
    - /opt/jmeter/scripts:/scripts

volumes:
  sonarqube_data:
    driver: local
  postgresql_data:
    driver: local



